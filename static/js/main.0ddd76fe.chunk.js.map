{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","latitude","setLatitude","longitude","setLongitude","numberOfCities","setNumberOfCities","cities","setCities","status","setStatus","formatData","data","citiesQuery","i","push","name","toUpperCase","join","coordsToDecimal","coords","Number","split","substring","indexOf","Status","isIndeterminate","color","size","pr","className","minHeight","width","align","justifyContent","maxWidth","borderWidth","borderRadius","boxShadow","px","py","textAlign","my","placeholder","onChange","event","currentTarget","value","defaultValue","min","max","valueString","mt","onClick","preventDefault","link","fetch","then","response","json","isInline","direction","readOnly","label","hasArrow","closeDelay","navigator","clipboard","writeText","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ddd76fe.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport { Box, Flex, Heading, Stack } from '@chakra-ui/layout';\nimport { FormControl, FormLabel } from '@chakra-ui/form-control';\nimport { Input } from '@chakra-ui/input';\nimport { Button } from '@chakra-ui/button';\nimport {\n  NumberDecrementStepper, NumberIncrementStepper, NumberInput,\n  NumberInputField, NumberInputStepper\n} from '@chakra-ui/number-input';\nimport { useState } from 'react'\nimport { CircularProgress } from '@chakra-ui/progress';\nimport { Tooltip } from '@chakra-ui/tooltip';\n\nfunction App() {\n  const [latitude, setLatitude] = useState('')\n  const [longitude, setLongitude] = useState('null')\n  const [numberOfCities, setNumberOfCities] = useState(4)\n  const [cities, setCities] = useState('')\n  const [status, setStatus] = useState(false)\n\n  const getData = (event) => {\n    event.preventDefault()\n    \n    const link = `https://nearby-cities.netlify.app/.netlify/functions/search?latitude=${latitude}&longitude=${longitude}`\n    \n    fetch(link)\n    .then(response => response.json())\n    .then(data => formatData(data))\n    \n    setStatus(true)\n  }\n\n  const copyCitiesToClipboard = () => {\n    navigator.clipboard.writeText(cities)\n  }\n  \n  const formatData = (data) => {\n    const citiesQuery = []\n    for (let i = 0; i < numberOfCities; i++) {\n      citiesQuery.push(data[i].name.toUpperCase())\n    }\n    setCities(citiesQuery.join(', '))\n    setStatus(false)\n  }\n\n  const coordsToDecimal = (coords) => {\n    const grades =Number(coords.split('¬∞')[0])\n    const minutes = Number(coords.substring(coords.indexOf('¬∞')+1, coords.indexOf(`'`)))\n    const seconds = Number(coords.substring(coords.indexOf(`'`) + 1, coords.indexOf(`\"`)))\n    \n    const decimalCoords = grades + minutes / 60 + seconds / 3600\n    return decimalCoords\n  }\n\n  const Status = () => {\n    if(!status) return ''\n    return (\n      <CircularProgress isIndeterminate color='green.300' size='20px' pr={15}/>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <Flex minHeight='100vh' width='full' align='center' justifyContent='center'>\n        <Box\n          maxWidth='450px'\n          borderWidth={1}\n          borderRadius={10}\n          boxShadow='lg'\n          px={4}\n          py={4}\n          textAlign='center'\n        >\n        <Box my={8}>\n          <Heading>Encontrar ciudades cercanas</Heading>\n        </Box>\n          <form>\n            <FormControl>\n              <FormLabel>Latitud: </FormLabel>\n              <Input\n                placeholder=\"Ingresa la latidud\"\n                onChange={event => setLatitude(coordsToDecimal(event.currentTarget.value))}\n              ></Input>\n            </FormControl>\n            <FormControl>\n              <FormLabel>Longitud: </FormLabel>\n              <Input\n                placeholder='Ingresa la longitud'\n                onChange={event => setLongitude(coordsToDecimal(event.currentTarget.value))}\n              ></Input>\n            </FormControl>\n            <FormControl>\n                <FormLabel>Numero de ciudades: </FormLabel>\n              <NumberInput\n                defaultValue={4}\n                min={1}\n                max={10}\n                onChange={valueString => setNumberOfCities(Number(valueString))}\n              >\n                <NumberInputField\n                />\n                  <NumberInputStepper>\n                    <NumberIncrementStepper />\n                    <NumberDecrementStepper/>\n                  </NumberInputStepper>\n                </NumberInput>\n            </FormControl>\n\n            <Button\n              width='full'\n              mt={4}\n              onClick={getData}\n            >üîç Buscar ciudades cercanas</Button>\n          </form>\n\n          <FormControl mt={10}>\n            <Stack isInline justifyContent='space-between'>\n              <FormLabel>Ciudades cercanas: </FormLabel>\n              <Status/>\n            </Stack>\n            <Stack direction='row'>\n              <Input readOnly value={cities}></Input>\n              <Tooltip label='Copy to clipboard' hasArrow closeDelay={500}>\n                <Button\n                  onClick={copyCitiesToClipboard}\n                >üìã</Button>\n              </Tooltip>\n            </Stack>\n          </FormControl>\n        </Box>\n      </Flex>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ChakraProvider } from '@chakra-ui/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App /> \n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}